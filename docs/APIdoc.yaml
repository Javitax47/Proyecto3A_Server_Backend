openapi: 3.0.3
info:
  title: API de AIRMONITOR
  description: API para la base de datos del proyecto irmonitor.
  version: 1.0.0
servers:
  - url: http://localhost:13000
paths:
  /tipos:
    post:
      summary: Crear un tipo de sensor
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tipo'
      responses:
        "200":
          description: Tipo de sensor creado exitosamente.
        "500":
          description: Error interno del servidor.
  /sensores:
    post:
      summary: Agregar un nuevo sensor
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Sensor'
      responses:
        "200":
          description: Sensor agregado exitosamente.
        "500":
          description: Error interno del servidor.
  /mediciones:
    post:
      summary: Registrar una medición
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Medicion'
      responses:
        "200":
          description: Medición registrada exitosamente.
        "400":
          description: Faltan parámetros necesarios.
        "404":
          description: Sensor no encontrado.
        "500":
          description: Error interno del servidor.
  
  /usuarios:
    post:
      summary: Crear un usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Usuario'
      responses:
        "201":
          description: Usuario creado exitosamente.
        "400":
          description: Datos inválidos.
        "500":
          description: Error interno del servidor.
  /setup:
    get:
      summary: Crear tablas iniciales en la base de datos
      responses:
        "200":
          description: Tablas creadas exitosamente.
        "500":
          description: Error interno del servidor.
  /:
    get:
      summary: Obtener todas las tablas de la base de datos
      responses:
        "200":
          description: Tablas obtenidas exitosamente.
        "500":
          description: Error interno del servidor.
  /latestByEmail/{email}:
    get:
      summary: Obtener las últimas mediciones de un usuario
      parameters:
        - name: email
          in: path
          required: true
          schema:
            type: string
          description: Correo electrónico del usuario.
      responses:
        "200":
          description: Últimas mediciones obtenidas exitosamente.
        "404":
          description: No se encontraron mediciones.
        "500":
          description: Error interno del servidor.
  /usuarios/{email}/sensores:
    get:
      summary: Obtener sensores asignados a un usuario
      parameters:
        - name: email
          in: path
          required: true
          schema:
            type: string
          description: Correo electrónico del usuario.
      responses:
        "200":
          description: Lista de sensores asignados.
        "404":
          description: Usuario no encontrado o sin sensores.
        "500":
          description: Error interno del servidor.
  /usuarios/login/{email}/{password}:
    get:
      summary: Autenticar a un usuario
      parameters:
        - name: email
          in: path
          required: true
          schema:
            type: string
          description: Correo electrónico del usuario.
        - name: password
          in: path
          required: true
          schema:
            type: string
          description: Contraseña del usuario.
      responses:
        "200":
          description: Inicio de sesión exitoso.
        "401":
          description: Credenciales incorrectas.
        "500":
          description: Error interno del servidor.
  /alertas/{email}:
    get:
      summary: Obtener alertas de un usuario
      parameters:
        - name: email
          in: path
          required: true
          schema:
            type: string
          description: Correo electrónico del usuario.
      responses:
        "200":
          description: Lista de alertas del usuario.
        "404":
          description: No se encontraron alertas.
        "500":
          description: Error interno del servidor.
    delete:
      summary: Eliminar alertas de un usuario
      parameters:
        - name: email
          in: path
          required: true
          schema:
            type: string
          description: Correo electrónico del usuario.
      responses:
        "200":
          description: Alertas del usuario eliminadas.
        "500":
          description: Error interno del servidor.
  /alertas:
    delete:
      summary: Eliminar todas las alertas
      responses:
        "200":
          description: Todas las alertas eliminadas.
        "500":
          description: Error interno del servidor.
  
  /alertas/{email}/{alertaId}:
    delete:
      summary: Eliminar una alerta específica de un usuario
      parameters:
        - name: email
          in: path
          required: true
          schema:
            type: string
          description: Correo electrónico del usuario.
        - name: alertaId
          in: path
          required: true
          schema:
            type: string
          description: ID de la alerta.
      responses:
        "200":
          description: Alerta eliminada exitosamente.
        "404":
          description: Alerta no encontrada o no pertenece al usuario.
        "500":
          description: Error interno del servidor.
  /erase:
    delete:
      summary: Eliminar todas las tablas de la base de datos
      responses:
        "200":
          description: Tablas eliminadas exitosamente.
        "500":
          description: Error interno del servidor.
  /reset:
    delete:
      summary: Reiniciar base de datos
      responses:
        "200":
          description: Base de datos reiniciada exitosamente.
        "500":
          description: Error interno del servidor.
  /users/update:
    put:
      summary: Actualizar el perfil de un usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Usuario'
      responses:
        "200":
          description: Perfil actualizado exitosamente.
        "404":
          description: Usuario no encontrado.
        "500":
          description: Error interno del servidor.
components:
  schemas:
    Tipo:
      type: object
      properties:
        id:
          type: integer
        tipo:
          type: string
      example:
        id: 1
        tipo: "temperature"
    Sensor:
      type: object
      properties:
        id:
          type: integer
        uuid:
          type: string
      example:
        id: 1
        uuid: "sensor-uuid-1"
    Medicion:
      type: object
      properties:
        id:
          type: integer
        sensor_id:
          type: string
        valor:
          type: number
        timestamp:
          type: string
          format: date-time
        tipo:
          type: integer
        location:
          type: object
          properties:
            x:
              type: number
            y:
              type: number
      example:
        id: 1
        sensor_id: "sensor-uuid-1"
        valor: 45.3
        timestamp: "2024-12-01T12:00:00Z"
        tipo: 1
        location:
          x: 40.7128
          y: -74.0060
    Actividad:
      type: object
      properties:
        id:
          type: integer
        horas:
          type: array
          items:
            type: number
        distancia:
          type: array
          items:
            type: number
      example:
        id: 1
        horas: [1.5, 2.0, 3.0]
        distancia: [100.0, 200.0, 300.0]
    Usuario:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
        password:
          type: string
        actividad_id:
          type: integer
      example:
        username: "JohnDoe"
        email: "johndoe@example.com"
        password: "hashedpassword"
        actividad_id: 1
    AlertaUsuario:
      type: object
      properties:
        id:
          type: integer
        usuario_email:
          type: string
      example:
        id: 1
        usuario_email: "johndoe@example.com"
    Alerta:
      type: object
      properties:
        id:
          type: integer
        alertas_usuarios_id:
          type: integer
        timestamp:
          type: string
          format: date-time
        location:
          type: object
          properties:
            x:
              type: number
            y:
              type: number
        codigo:
          type: integer
      example:
        id: 1
        alertas_usuarios_id: 1
        timestamp: "2024-12-01T12:00:00Z"
        location:
          x: 40.7128
          y: -74.0060
        codigo: 120
    UsuarioSensor:
      type: object
      properties:
        usuario_email:
          type: string
        sensor_uuid:
          type: string
      example:
        usuario_email: "johndoe@example.com"
        sensor_uuid: "sensor-uuid-1"
